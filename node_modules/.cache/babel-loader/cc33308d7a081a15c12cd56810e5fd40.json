{"ast":null,"code":"export const getCurrentMonth = () => {\n  let now = new Date();\n  return `${now.getFullYear()}-${now.getMonth() + 1}`;\n};\nexport const filterListByMonth = (list, date) => {\n  let newList = [];\n  let [year, month] = date.split('-');\n  console.log(list);\n\n  for (let i in list) {\n    if (list[i].date.getFullYear() === parseInt(year) && list[i].date.getMonth() + 1 === parseInt(month)) {\n      newList.push(list[i]);\n    }\n  } // console.log(newList);\n\n\n  return newList;\n};","map":{"version":3,"names":["getCurrentMonth","now","Date","getFullYear","getMonth","filterListByMonth","list","date","newList","year","month","split","console","log","i","parseInt","push"],"sources":["/home/portuga/d5react/expense-tracker/src/helpers/dateFilter.ts"],"sourcesContent":["import { Item } from '../types/Item';\n\nexport const getCurrentMonth = () => {\n  let now = new Date();\n  return `${now.getFullYear()}-${now.getMonth() + 1}`;\n}\n\nexport const filterListByMonth = (list: Item[], date: string): Item[] => {\n  let newList: Item[] = [];\n  let [year, month] = date.split('-');\n  console.log(list);\n\n  for(let i in list) {\n    if (\n      list[i].date.getFullYear() === parseInt(year) &&\n      (list[i].date.getMonth() + 1) === parseInt(month)\n    ) {\n      newList.push(list[i]);\n    }\n  }\n  // console.log(newList);\n\n  return newList;\n}"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAM;EACnC,IAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;EACA,OAAQ,GAAED,GAAG,CAACE,WAAJ,EAAkB,IAAGF,GAAG,CAACG,QAAJ,KAAiB,CAAE,EAAlD;AACD,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAG,CAACC,IAAD,EAAeC,IAAf,KAAwC;EACvE,IAAIC,OAAe,GAAG,EAAtB;EACA,IAAI,CAACC,IAAD,EAAOC,KAAP,IAAgBH,IAAI,CAACI,KAAL,CAAW,GAAX,CAApB;EACAC,OAAO,CAACC,GAAR,CAAYP,IAAZ;;EAEA,KAAI,IAAIQ,CAAR,IAAaR,IAAb,EAAmB;IACjB,IACEA,IAAI,CAACQ,CAAD,CAAJ,CAAQP,IAAR,CAAaJ,WAAb,OAA+BY,QAAQ,CAACN,IAAD,CAAvC,IACCH,IAAI,CAACQ,CAAD,CAAJ,CAAQP,IAAR,CAAaH,QAAb,KAA0B,CAA3B,KAAkCW,QAAQ,CAACL,KAAD,CAF5C,EAGE;MACAF,OAAO,CAACQ,IAAR,CAAaV,IAAI,CAACQ,CAAD,CAAjB;IACD;EACF,CAZsE,CAavE;;;EAEA,OAAON,OAAP;AACD,CAhBM"},"metadata":{},"sourceType":"module"}